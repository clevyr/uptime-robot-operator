name: Build

on: push

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: false
      - name: Lint
        uses: golangci/golangci-lint-action@v6

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
      - name: Test
        run: make test

  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/clevyr/uptime-robot-operator
          tags: |
            type=raw,priority=1000,value=latest,enable=${{ startsWith(github.ref, 'refs/tags/v') }}
            type=raw,value=beta,enable=${{ github.ref_name == 'main' }}
            type=ref,event=tag
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}
      - name: Build and Push
        uses: docker/build-push-action@v5
        with:
          context: .
          pull: true
          push: ${{ steps.meta.outputs.tags != '' }}
          platforms: linux/amd64,linux/arm/v7,linux/arm64/v8
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  release:
    name: Release
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [lint, test, build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Generate Changelog
        id: changelog
        uses: gabe565/changelog-generator@v1
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          body: ${{ steps.changelog.outputs.changelog }}

  release-manifests:
    name: Release Manifests
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [lint, test, build]
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}
      - name: Setup Flux CLI
        uses: fluxcd/flux2/action@v2.3.0
      - name: Generate Installer
        run: make build-installer IMG=ghcr.io/clevyr/uptime-robot-operator:${{ github.ref_name }}
      - name: Publish
        run: |
          flux push artifact \
            oci://ghcr.io/clevyr/uptime-robot-operator-manifests:${{ github.ref_name }} \
            --path=dist --source=${{ github.repositoryUrl }} --revision="${{ github.ref_name }}@sha1:${{ github.sha }}"
